{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "functionsStorageAccountNamePrefix": {
      "defaultValue": "funcstrg",
      "type": "string"
    },
    "serverlessPlanNamePrefix": {
      "defaultValue": "SlessPlan",
      "type": "string"
    },
    "paasPlanNamePrefix": {
      "defaultValue": "PaasPlan",
      "type": "string"
    },
    "webUiWebAppNamePrefix": {
      "defaultValue": "serverlessshop",
      "type": "string"
    },
    "functionAppNamePrefix": {
      "defaultValue": "serverlessapp",
      "type": "string"
    },
    "webUiRepoURL": {
      "type": "string",
      "defaultValue": "https://github.com/GBBTSP/serverless-shop.git"
    },
    "functionAppRepoURL": {
      "type": "string",
      "defaultValue": "https://github.com/GBBTSP/ServerlessComputeFunctions.git"
    },
    "cognitiveservicestextanalytics_apiKey": {
      "type": "securestring"
    },
    "ServiceBusNamespacePrefix": {
      "type": "string"
    },
    "ServiceBusQueueName": {
      "type": "string"
    },
    "ProcessOrderLogicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    }
  },
  "variables": {
    "functionsStorageAccountName": "[concat(parameters('functionsStorageAccountNamePrefix'), uniqueString(resourceGroup().id) )]",
    "serverlessPlanName": "[concat(parameters('serverlessPlanNamePrefix'), uniqueString(resourceGroup().id))]",
    "paasPlanName": "[concat(parameters('paasPlanNamePrefix'), uniqueString(resourceGroup().id))]",
    "webUiWebAppName": "[concat(parameters('webUiWebAppNamePrefix'), uniqueString(resourceGroup().id))]",
    "functionAppName": "[concat(parameters('functionAppNamePrefix'), uniqueString(resourceGroup().id))]",
    "serviceBusNamespace": "[concat(parameters('ServiceBusNamespacePrefix'), uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('functionsStorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "australiaeast",
      "tags": {
        "displayName": "Storage Account"
      },
      "properties": {},
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "name": "[variables('serverlessPlanName')]",
      "apiVersion": "2015-08-01",
      "location": "Australia East",
      "properties": {
        "name": "[variables('serverlessPlanName')]",
        "numberOfWorkers": 0
      },
      "resources": [],
      "dependsOn": [],
      "tags": {
        "displayName": "Serverless Plan"
      }
    },
    {
      "comments": "Generalized from resource: '/subscriptions/80d4fe69-c95b-4dd2-a938-9250f1c8ab03/resourceGroups/ignite-australia/providers/Microsoft.Web/sites/igniteaustralia'.",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[variables('functionAppName')]",
      "apiVersion": "2015-08-01",
      "location": "Australia East",
      "properties": {
        "name": "[variables('functionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverlessPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('functionAppRepoURL')]",
            "branch": "master",
            "IsManualIntegration": false
          },
          "tags": {
            "displayName": "Function App Source Code Repo"
          }
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverlessPlanName'))]"
      ],
      "tags": {
        "displayName": "Function App"
      }
    },
    {
      "comments": "Generalized from resource: '/subscriptions/80d4fe69-c95b-4dd2-a938-9250f1c8ab03/resourceGroups/ignite-australia/providers/Microsoft.Web/serverfarms/ignite-australia-asp'.",
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "size": "S1",
        "family": "S",
        "capacity": 1
      },
      "kind": "app",
      "name": "[variables('paasPlanName')]",
      "apiVersion": "2015-08-01",
      "location": "Australia East",
      "properties": {
        "name": "[variables('paasPlanName')]",
        "numberOfWorkers": 1
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverlessPlanName'))]"
      ],
      "tags": {
        "displayName": "Web UI PaaS Plan"
      }
    },
    {
      "comments": "Generalized from resource: '/subscriptions/80d4fe69-c95b-4dd2-a938-9250f1c8ab03/resourceGroups/ignite-australia/providers/Microsoft.Web/sites/serverlessshop'.",
      "type": "Microsoft.Web/sites",
      "kind": "app",
      "name": "[variables('webUiWebAppName')]",
      "apiVersion": "2015-08-01",
      "location": "Australia East",
      "tags": {
        "displayName": "Web UI Web App",
        "hidden-related:/subscriptions/80d4fe69-c95b-4dd2-a938-9250f1c8ab03/resourcegroups/ignite-australia/providers/Microsoft.Web/serverfarms/ignite-australia-asp": "empty"
      },
      "properties": {
        "name": "[variables('webUiWebAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('paasPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webUiWebAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('webUiRepoURL')]",
            "branch": "master",
            "IsManualIntegration": false
          },
          "tags": {
            "displayName": "Web UI Source Code Repo"
          }
        }

      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('paasPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/Connections",
      "apiVersion": "2016-06-01",
      "name": "CognitiveServicesTextAnalyticsConnection",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'cognitiveservicestextanalytics')]"
        },
        "parameterValues": {
          "apiKey": "[parameters('cognitiveservicestextanalytics_apiKey')]"
        }
      },
      "tags": {
        "displayName": "Cognitive Services Text Analytics Connection"
      }
    },
    {
      "name": "[variables('serviceBusNamespace')]",
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Service Bus Namespace"
      },
      "kind": "messaging",
      "sku": {
        "name": "StandardSku",
        "tier": "Standard"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "[parameters('ServiceBusQueueName')]",
          "type": "Queues",
          "tags": {
            "displayName": "Service Bus Queue"
          },
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespace'))]"
          ],
          "properties": {
            "path": "[parameters('ServiceBusQueueName')]"
          }
        }
      ]
    },
    {
      "name": "[parameters('ProcessOrderLogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
      ],
      "tags": {
        "displayName": "ProcessOrder Logic App"
      },
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Response": {
              "inputs": {
                "body": {
                  "message": "Order placed and processed successfully. Check your email for a confirmation."
                },
                "statusCode": 200
              },
              "runAfter": {
                "ValidateOrder": [
                  "Succeeded"
                ]
              },
              "type": "Response"
            },
            "ValidateOrder": {
              "inputs": {
                "body": "@triggerBody()",
                "function": {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('functionAppName'), '/functions/ValidateOrder')]"
                }
              },
              "runAfter": {},
              "type": "Function"
            },
            "ChargeCustomer": {
              "inputs": {
                "body": {
                  "card": "@triggerBody()['CreditCard']",
                  "price": "@triggerBody()['Price']"
                },
                "function": {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('functionAppName'), '/functions/ChargeCustomer')]"
                }
              },
              "runAfter": {
                "Response": [
                  "Succeeded"
                ]
              },
              "type": "Function"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {},
          "triggers": {
            "manual": {
              "inputs": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "properties": {
                    "Address": {
                      "type": "string"
                    },
                    "CreditCard": {
                      "type": "string"
                    },
                    "Email": {
                      "type": "string"
                    },
                    "Name": {
                      "type": "string"
                    },
                    "Price": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "Name",
                    "Address",
                    "Email",
                    "CreditCard",
                    "Price"
                  ],
                  "type": "object"
                }
              },
              "kind": "Http",
              "type": "Request"
            }
          }
        }
      }
    }
  ]
}
